# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import matplotlib 
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
#matplotlib.use('Qt5Agg')

import matplotlib.pyplot as plt
from matplotlib.figure import Figure
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg,NavigationToolbar2QT as Navi
import seaborn as sea
import pandas as pd
import sip
import platform

# Use NSURL as a workaround to pyside/Qt4 behaviour for dragging and dropping on OSx
op_sys = platform.system()
if op_sys == 'Darwin':
    from Foundation import NSURL

class MatplotlibCanvas(FigureCanvasQTAgg):
    def __init__(self,parent=None, width=5, height=5, dpi=140): 
        fig = Figure(figsize=(width,height),dpi=dpi)
        self.axes=fig.add_subplot(111)
        super(MatplotlibCanvas,self).__init__(fig)
        fig.tight_layout()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setObjectName("comboBox")
        self.horizontalLayout.addWidget(self.comboBox)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menusensors = QtWidgets.QMenu(self.menubar)
        self.menusensors.setObjectName("menusensors")
        self.menufile = QtWidgets.QMenu(self.menubar)
        self.menufile.setObjectName("menufile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actioncsv_file = QtWidgets.QAction(MainWindow)
        self.actioncsv_file.setObjectName("actioncsv_file")
        self.actionxl_file = QtWidgets.QAction(MainWindow)
        self.actionxl_file.setObjectName("actionxl_file")
        self.menufile.addAction(self.actioncsv_file)
        self.menufile.addAction(self.actionxl_file)
        self.menubar.addAction(self.menusensors.menuAction())
        self.menubar.addAction(self.menufile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.filename=''
        self.canv=MatplotlibCanvas(self)
        self.df=[]
        self.toolbar=Navi(self.canv,self.centralwidget)
        self.horizontalLayout.addWidget(self.toolbar)


        
        self.themes=['classic','seaborn','fast','grayscale','bmh','ggplot']
        self.comboBox.addItems(self.themes)
        self.pushButton.clicked.connect(self.getfile)
        self.comboBox.currentIndexChanged['QString'].connect(self.update)

    def update(self,value):
        print("Value from the combo box", value)
        plt.clf()
        plt.style.use(value)
        try:
            self.horizontalLayout.remove.Widget(self.toolbar)
            self.verticalLayout.removeWidget(self.canv)
            sip,delete(self.toolbar)
            sip.delete(self.canv)
            self.toolbar=None
            self.canv=None
            self.verticalLayout.removeItem(self.spacerItem1)
        except Exception as e:
            print(e)
            pass
        self.canv=MatplotlibCanvas(self)
        self.toolbar=Navi(self.canv,self.centralwidget)

        self.horizontalLayout.addWidget(self.toolbar)
        self.verticalLayout.addWidget(self.canv)
        self.canv.axes.cla()
        ax=self.canv.axes
        self.df.plot( ax=self.canv.axes)
        legend=ax.legend()
        legend.set_draggable(True)
        ax.set_xlabel('X axis')
        ax.set_ylabel('Y axis')
        ax.set_title('Title')
        self.canv.draw()




    def getfile(self):
        self.filename=QFileDialog.getOpenFileName(filter="csv(*.csv)")[0]#addressing the file locations(csvb/xl)
        print("File:",self.filename)
        self.readData()

    def readData(self):
        import os
        base_name=os.path.basename(self.filename)
        self.Title=os.path.splitext(base_name)[0]
        print('File',self.Title)
        self.df=pd.read_csv(self.filename,encoding='utf-8').fillna(0)
        self.update(self.themes[0])



                                                                                                       

    

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "select theme"))
        self.pushButton.setText(_translate("MainWindow", "open"))
        self.menusensors.setTitle(_translate("MainWindow", "sensors"))
        self.menufile.setTitle(_translate("MainWindow", "file"))
        self.actioncsv_file.setText(_translate("MainWindow", "csv file"))
        self.actionxl_file.setText(_translate("MainWindow", "xl file"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
